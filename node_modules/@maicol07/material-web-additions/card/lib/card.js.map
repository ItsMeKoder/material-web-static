{"version":3,"file":"card.js","sourceRoot":"","sources":["card.ts"],"names":[],"mappings":"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","sourcesContent":["import '@material/web/ripple/ripple.js';\nimport '@material/web/focus/focus-ring.js';\n\nimport {html, LitElement, PropertyValues, TemplateResult} from 'lit';\nimport {queryAssignedElements} from 'lit/decorators.js';\nimport {ClassInfo, classMap} from 'lit/directives/class-map.js';\nimport {property} from 'lit/decorators/property.js';\n\nexport abstract class Card extends LitElement {\n    /** Allows the card to be clickable with a ripple effect. */\n    @property({type: Boolean, reflect: true}) clickable = false;\n    /** @internal */\n    disabled: boolean;\n    /**\n     * @internal\n     * @protected\n     */\n    @queryAssignedElements({slot: 'button'}) protected buttons!: HTMLElement[];\n    /**\n     * @internal\n     * @protected\n     */\n    @queryAssignedElements({slot: 'icon'}) protected icons!: HTMLElement[];\n\n    override render() {\n        return html`\n            <div class=\"${classMap(this.getRenderClasses())}\">\n                ${this.renderPrimaryAction()}\n                ${this.renderActions()}\n                <md-elevation shadow></md-elevation>\n            </div>`;\n    }\n\n    getRenderClasses(): ClassInfo {\n        return {\n            'mdc-card': true\n        };\n    }\n\n    getPrimaryActionRenderClasses(): ClassInfo {\n        return {\n            'mdc-card__primary-action': true,\n            'mdc-card__primary-action--disabled': this.disabled\n        };\n    }\n\n    stopActionPropagation(action: HTMLElement) {\n        const events = ['click', 'pointerdown', 'pointerup', 'pointercancel', 'pointerleave', 'pointerenter', 'contextmenu'];\n        for (const event of events) {\n            action.addEventListener(event, (e) => {\n                e.stopPropagation();\n            });\n        }\n\n        action.addEventListener('focus', () => this.blur());\n        action.addEventListener('blur', () => this.focus());\n    }\n\n    getRenderActionsClasses() {\n        return {\n            'mdc-card__actions': true,\n        };\n    }\n\n    protected override update(_changedProperties: PropertyValues) {\n        if (_changedProperties.has('clickable')) {\n            this.disabled = !this.clickable;\n        }\n        super.update(_changedProperties);\n    }\n\n    protected renderPrimaryAction() {\n        return html`\n            <div id=\"primary-action\"\n                 class=\"${classMap(this.getPrimaryActionRenderClasses())}\"\n                 tabindex=\"0\"\n                 aria-label=\"${this.ariaLabel}\">\n                 ${this.renderRipple()}\n                ${this.renderFocusRing()}\n                <slot></slot>\n            </div>`;\n    }\n\n    protected getRippleRenderClasses() {\n        return {\n            'mdc-card__ripple': true\n        };\n    }\n\n    /** @soyTemplate */\n    protected renderFocusRing() {\n        return html`\n            <md-focus-ring for=\"primary-action\"></md-focus-ring>`;\n    }\n\n    protected onButtonSlotChanged() {\n        for (const button of this.buttons) {\n            button.classList.add('mdc-card__action');\n            button.classList.add('mdc-card__action--button');\n            this.stopActionPropagation(button);\n        }\n        this.requestUpdate();\n    }\n\n    protected onIconSlotChanged() {\n        for (const icon of this.icons) {\n            icon.classList.add('mdc-card__action');\n            icon.classList.add('mdc-card__action--icon');\n            this.stopActionPropagation(icon);\n        }\n        this.requestUpdate();\n    }\n\n    protected renderRipple() {\n        return html`<md-ripple class=\"${classMap(this.getRippleRenderClasses())}\" ?disabled=${this.disabled}></md-ripple>`;\n    }\n\n    protected wrapButtonSlot(buttonSlotTemplate: TemplateResult | string) {\n        if (this.buttons.length > 0) {\n            return html`\n                <div class=\"mdc-card__action-buttons\">\n                    ${buttonSlotTemplate}\n                </div>`;\n        }\n        return buttonSlotTemplate;\n    }\n\n    protected wrapIconSlot(iconSlotTemplate: TemplateResult | string) {\n        if (this.icons.length > 0) {\n            return html`\n                <div class=\"mdc-card__action-icons\">\n                    ${iconSlotTemplate}\n                </div>`;\n        }\n        return iconSlotTemplate;\n    }\n\n  protected renderActions() {\n    const buttonSlotTemplate = html`<slot name=\"button\" @slotchange=${this.onButtonSlotChanged}></slot>`;\n    const iconSlotTemplate = html`<slot name=\"icon\" @slotchange=${this.onIconSlotChanged}></slot>`;\n\n    if (this.icons.length > 0 || this.buttons.length > 0) {\n        return html`\n            <div class=\"${classMap(this.getRenderActionsClasses())}\"\n                ${this.renderRipple()}>\n                ${this.wrapButtonSlot(buttonSlotTemplate)}\n                ${this.wrapIconSlot(iconSlotTemplate)}\n            </div>`;\n    }\n      return html`\n          ${buttonSlotTemplate}\n          ${iconSlotTemplate}\n      `;\n  }\n}\n"]}