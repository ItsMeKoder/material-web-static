import '@material/web/ripple/ripple.js';
import '@material/web/focus/focus-ring.js';
import { LitElement, PropertyValues, TemplateResult } from 'lit';
import { ClassInfo } from 'lit/directives/class-map.js';
export declare abstract class Card extends LitElement {
    /** Allows the card to be clickable with a ripple effect. */
    clickable: boolean;
    /** @internal */
    disabled: boolean;
    /**
     * @internal
     * @protected
     */
    protected buttons: HTMLElement[];
    /**
     * @internal
     * @protected
     */
    protected icons: HTMLElement[];
    render(): TemplateResult<1>;
    getRenderClasses(): ClassInfo;
    getPrimaryActionRenderClasses(): ClassInfo;
    stopActionPropagation(action: HTMLElement): void;
    getRenderActionsClasses(): {
        'mdc-card__actions': boolean;
    };
    protected update(_changedProperties: PropertyValues): void;
    protected renderPrimaryAction(): TemplateResult<1>;
    protected getRippleRenderClasses(): {
        'mdc-card__ripple': boolean;
    };
    /** @soyTemplate */
    protected renderFocusRing(): TemplateResult<1>;
    protected onButtonSlotChanged(): void;
    protected onIconSlotChanged(): void;
    protected renderRipple(): TemplateResult<1>;
    protected wrapButtonSlot(buttonSlotTemplate: TemplateResult | string): string | TemplateResult;
    protected wrapIconSlot(iconSlotTemplate: TemplateResult | string): string | TemplateResult;
    protected renderActions(): TemplateResult<1>;
}
