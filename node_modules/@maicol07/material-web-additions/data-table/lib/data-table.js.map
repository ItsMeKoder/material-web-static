{"version":3,"file":"data-table.js","sourceRoot":"","sources":["data-table.ts"],"names":[],"mappings":"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","sourcesContent":["import '@material/web/linearprogress/linear-progress.js';\nimport '@material/web/iconbutton/filled-icon-button.js';\nimport '@material/web/select/outlined-select.js';\nimport '@material/web/select/select-option.js';\nimport '../data-table-footer.js';\n\nimport {html, PropertyValueMap} from 'lit';\nimport {property, query, queryAssignedElements} from 'lit/decorators.js';\nimport {DataTableColumn, FilterTextFieldInputEventDetail, SortButtonClickedEventDetail} from './data-table-column.js';\nimport {\n  attributes,\n  MDCDataTable,\n  MDCDataTableAdapter,\n  MDCDataTableFoundation,\n  MDCDataTableRowSelectionChangedEventDetail,\n  ProgressIndicatorStyles,\n  RowClickEventData,\n  SortActionEventDetail\n} from '@material/data-table';\nimport {cssClasses, messages, SortValue} from '@material/data-table/constants.js';\nimport {IconButton} from '@material/web/iconbutton/lib/icon-button.js';\nimport {LinearProgress} from '@material/web/linearprogress/lib/linear-progress.js';\nimport {DataTableRow} from './data-table-row.js';\nimport {BaseElement} from '@material/mwc-base';\nimport {Select} from '@material/web/select/lib/select.js';\n\nexport interface RowSelectionChangedDetail {\n  row: DataTableRow,\n  rowIndex: number,\n  selected: boolean\n}\n\nexport interface FilteredDetail {\n  column: DataTableColumn,\n  text: string,\n  caseSensitive: boolean\n  columnIndex: number\n}\n\nexport interface SortedDetail {\n  column: DataTableColumn,\n  isDescending: boolean\n}\n\nexport class DataTable extends BaseElement {\n  /**\n   * Enable/disable pagination.\n   */\n  @property({type: Boolean, reflect: true}) paginated = false;\n  /**\n   * JSON array with the page sizes to be used in the pagination and shown as page size select options.\n   */\n  @property({type: String, reflect: true}) pageSizes = '[10, 25, 100]';\n  /**\n   * Label to show before the page size select.\n   */\n  @property({type: String, reflect: true}) pageSizesLabel = 'Rows per page:';\n  /**\n   * Index of the first row to be shown on the current page.\n   */\n  @property({type: Number, reflect: true}) firstRowOfPage = 1;\n  /** @internal */\n  protected pageSizesArray: number[] = JSON.parse(this.pageSizes);\n  /**\n   * Size of the current page.\n   */\n  @property({type: Number, reflect: true}) currentPageSize = this.pageSizesArray[0];\n  /**\n   * Index of the last row to be shown on the current page.\n   */\n  @property({type: Number, reflect: true}) lastRowOfPage = this.currentPageSize;\n  /**\n   * Label pattern to show after the page size select that indicates the current rows shown in the page.\n   * It should contain the following parameters: `:firstRow`, `:lastRow`, `:totalRows`\n   */\n  @property({type: String}) paginationTotalLabel = ':firstRow-:lastRow of :totalRows';\n  /**\n   * Whether the loading indicator is active.\n   */\n  @property({type: Boolean, reflect: true})\n  inProgress = false;\n  /**\n   * Overall height of the table. Available in three different measures.\n   */\n  @property({type: String, reflect: true})\n  density?: '' | 'tight' | 'comfortable' | 'dense' | 'compact';\n  /** @internal */\n      // @ts-ignore\n  @queryAssignedElements({slot: 'header-cell', selector: 'md-data-table-column'}) columns!: DataTableColumn[];\n  /** @internal */\n      // @ts-ignore\n  @queryAssignedElements({slot: 'row', selector: 'md-data-table-row'}) rows!: DataTableRow[];\n  /** @internal */\n      // @ts-ignore\n  @query('.mdc-data-table') protected tableElement!: HTMLTableElement;\n  /** @internal */\n      // @ts-ignore\n  @query('.mdc-data-table__table-container') protected tableContainerElement!: HTMLTableElement;\n  /** @internal */\n      // @ts-ignore\n  @query('.mdc-data-table__header-row') protected headerRowElement!: HTMLTableSectionElement;\n  /** @internal */\n      // @ts-ignore\n  @query('.mdc-data-table__progress-indicator') protected progressIndicator!: LinearProgress;\n\n  /** @internal */\n  protected mdcDataTable?: MDCDataTable;\n  /** @internal */\n  protected mdcRoot: HTMLDivElement = this.tableElement;\n  /** @internal */\n      // @ts-ignore (TypeScript bug)\n  protected readonly mdcFoundationClass = MDCDataTableFoundation;\n  /** @internal */\n      // @ts-ignore (TypeScript bug)\n  protected mdcFoundation!: MDCDataTableFoundation;\n  protected columnFilters: Map<DataTableColumn, string> = new Map();\n\n  /** @internal */\n  protected get headerCheckboxRow() {\n    return this.columns.filter((column) => column.checkbox !== undefined)[0];\n  }\n\n  /** @internal */\n  protected get headerCheckbox() {\n    return this.headerCheckboxRow?.checkbox;\n  }\n\n  override render() {\n    return html`\n      <div class=\"mdc-data-table\">\n        <div class=\"mdc-data-table__table-container\">\n          <div class=\"mdc-data-table__table\" aria-label=\"${this.ariaLabel}\" role=\"table\">\n            <div class=\"mdc-data-table__head\" role=\"rowgroup\">\n              <div class=\"mdc-data-table__header-row\" role=\"row\">\n                <slot name=\"header-cell\" @slotchange=${this.onHeaderCellSlotChange}></slot>\n              </div>\n            </div>\n            <div class=\"mdc-data-table__content\" role=\"rowgroup\">\n              <slot name=\"row\" @slotchange=${() => this.requestUpdate()}></slot>\n            </div>\n          </div>\n        </div>\n\n        ${this.renderPagination()}\n\n        <slot name=\"footer\"></slot>\n\n        <div class=\"mdc-data-table__progress-indicator\">\n          <div class=\"mdc-data-table__scrim\"></div>\n          <md-linear-progress indeterminate class=\"mdc-data-table__linear-progress\" role=\"progressbar\"\n                               aria-label=\"Data is being loaded...\"></md-linear-progress>\n        </div>\n      </div>\n    `;\n  }\n\n  onHeaderCellSlotChange() {\n    this.requestUpdate();\n    const sortColumn = this.columns.find((column) => column.sortable && column.sorted);\n    if (sortColumn) {\n      sortColumn.onSortButtonClicked(new CustomEvent<{selected: boolean}>('icon-button-toggle-change', {detail: {selected: !sortColumn.sortedDescending}}));\n    }\n  }\n\n  /** @internal */\n  rowCallback = (e: Event) => this.mdcFoundation.handleRowCheckboxChange(e);\n\n  /** @internal */\n  headerRowCallback = () => this.mdcFoundation.handleHeaderRowCheckboxChange();\n\n  /** @internal */\n  filterColumnCallback = (e: Event) => {\n    const event = e as CustomEvent<FilterTextFieldInputEventDetail>;\n\n    // Don't filter if the column is using custom filtering\n    if (event.detail.customFiltering) {\n      return;\n    }\n\n    const {text, column} = event.detail;\n\n    if (text === '') {\n      this.columnFilters.delete(column);\n    } else {\n      this.columnFilters.set(column, text);\n    }\n\n    for (const row of this.rows) {\n      row.hidden = true;\n    }\n\n    let rowsToShow = this.rows;\n\n    for (let [column, filterText] of this.columnFilters) {\n      rowsToShow = this.rows.filter((row) => {\n        const index = this.columns.indexOf(column);\n        let cellText = row.cells[index].textContent ?? '';\n\n        if (!event.detail.caseSensitive) {\n          cellText = cellText.toLowerCase();\n          filterText = filterText.toLowerCase();\n        }\n\n        return cellText.search(filterText) !== -1;\n      });\n    }\n\n    this.showRows(rowsToShow);\n\n    /**\n     * Event emitted when the data table has been filtered.\n     *\n     * Event detail: `FilteredDetail`;\n     */\n    this.dispatchEvent(new CustomEvent<FilteredDetail>('filtered', {\n      detail: {\n        column: event.detail.column,\n        text,\n        caseSensitive: event.detail.caseSensitive,\n        columnIndex: this.columns.indexOf(column)\n      }\n    }));\n  };\n  sortColumnCallback = (e: Event) => {\n    const event = e as CustomEvent<SortButtonClickedEventDetail>;\n    const {column, isDescending} = event.detail;\n\n    // Don't sort if the column is using custom sorting\n    if (!event.detail.customSorting) {\n      this.inProgress = true;\n\n      for (const col of this.columns.filter((col) => col !== column && col.sortable)) {\n        col.sorted = false;\n        col.sortedDescending = false;\n      }\n\n      const cells = this.rows.map((row) => row.cells[this.columns.indexOf(column)]);\n\n      cells.sort((a: HTMLElement, b: HTMLElement) => {\n        let aValue: string | number = a.textContent;\n        let bValue: string | number = b.textContent;\n\n        if (column.type === 'numeric') {\n          aValue = Number.parseFloat(aValue);\n          bValue = Number.parseFloat(bValue);\n        }\n\n        if (!isDescending) {\n          const temporary = aValue;\n          aValue = bValue;\n          bValue = temporary;\n        }\n\n        if (typeof aValue === 'string' && typeof bValue === 'string') {\n          return aValue.localeCompare(bValue);\n        }\n\n        return aValue < bValue ? -1 : (aValue > bValue ? 1 : 0);\n      });\n\n      // this.rows = cells.map((cell) => cell.parentElement as DataTableRow);\n      for (const cell of cells) {\n        const row = cell.parentElement as DataTableRow;\n        row.parentElement.append(row);\n      }\n\n      this.inProgress = false;\n      column.sorted = true;\n    }\n    column.withSortButton = true;\n\n    /**\n     * Event emitted when the data table has been filtered.\n     *\n     * Event detail: `FilteredDetail`;\n     */\n    this.dispatchEvent(new CustomEvent<SortedDetail>('sorted', {\n      detail: {\n        column: event.detail.column,\n        isDescending,\n      }\n    }));\n  };\n\n  protected renderPagination() {\n    if (this.paginated) {\n      const initialPageLabel = this.firstRowOfPage < 1 ? 1 : this.firstRowOfPage;\n      const lastPageLabel = this.lastRowOfPage > this.rows.length ? this.rows.length : this.lastRowOfPage;\n      return html`\n        <md-data-table-footer>\n          <div class=\"mdc-data-table__pagination-trailing\">\n            <div class=\"mdc-data-table__pagination-rows-per-page\">\n              <div class=\"mdc-data-table__pagination-rows-per-page-label\">\n                ${this.pageSizesLabel}\n              </div>\n              \n              <md-outlined-select\n                  type=\"number\"\n                  class=\"mdc-data-table__pagination-rows-per-page-select\"\n                  value=\"${this.currentPageSize}\"\n                  @input=${this.onPageSizeSelected}>\n                  ${this.pageSizesArray.map((size) => html`\n                  <md-select-option value=\"${size}\" headline=\"${size}\">${size}</md-select-option>\n                  `)}\n              </md-outlined-select>\n            </div>\n\n            <div class=\"mdc-data-table__pagination-navigation\">\n              <div class=\"mdc-data-table__pagination-total\">\n                ${this.renderTemplate(this.paginationTotalLabel, {\n                  'firstRow': initialPageLabel,\n                  'lastRow': lastPageLabel,\n                  'totalRows': this.rows.length,\n                })}\n              </div>\n              <md-filled-icon-button class=\"mdc-data-table__pagination-button\"\n                               data-page=\"first\"\n                               ?disabled=${this.firstRowOfPage <= 1}\n                               @click=${this.onPaginationButtonClicked}>\n                <slot name=\"pagination-first-button-icon\">\n                  <md-icon slot=\"icon\">first_page</md-icon>\n                </slot>\n              </md-filled-icon-button>\n              <md-filled-icon-button class=\"mdc-data-table__pagination-button\"\n                               data-page=\"previous\"\n                               ?disabled=${this.firstRowOfPage <= 1}\n                               @click=${this.onPaginationButtonClicked}>\n                <slot name=\"pagination-previous-button-icon\">\n                  <md-icon>chevron_left</md-icon>\n                </slot>\n              </md-filled-icon-button>\n              <md-filled-icon-button class=\"mdc-data-table__pagination-button\"\n                               data-page=\"next\"\n                               ?disabled=${this.lastRowOfPage >= this.rows.length}\n                               @click=${this.onPaginationButtonClicked}>\n                <slot name=\"pagination-next-button-icon\">\n                  <md-icon>chevron_right</md-icon>\n                </slot>\n              </md-filled-icon-button>\n              <md-filled-icon-button class=\"mdc-data-table__pagination-button\"\n                               data-page=\"last\"\n                               ?disabled=${this.lastRowOfPage >= this.rows.length}\n                               @click=${this.onPaginationButtonClicked}>\n                <slot name=\"pagination-last-button-icon\">\n                  <md-icon>last_page</md-icon>\n                </slot>\n              </md-filled-icon-button>\n            </div>\n          </div>\n        </div>\n      `;\n    }\n\n    return '';\n  }\n\n  protected onPageSizeSelected(e: InputEvent) {\n    // const select = e.target as Autocomplete;\n    this.currentPageSize = Number.parseInt((e.target as Select).value);\n    this.paginate('first');\n  }\n\n  protected onPaginationButtonClicked(event: Event) {\n    let button = event.target as HTMLElement;\n    if (!(button instanceof IconButton)) {\n      button = button.closest('.mdc-data-table__pagination-button') as IconButton;\n    }\n    const action = button.dataset['page'] as 'first' | 'previous' | 'next' | 'last';\n\n    this.paginate(action);\n  }\n\n  protected paginate(action: 'current' | 'first' | 'previous' | 'next' | 'last' = 'current') {\n    this.pageSizesArray = JSON.parse(this.pageSizes);\n    if (!this.pageSizesArray.includes(this.currentPageSize)) {\n      this.currentPageSize = this.pageSizesArray[0];\n    }\n\n    if (this.paginated) {\n      this.hideRows();\n\n      switch (action) {\n        case 'first':\n          this.firstRowOfPage = 1;\n          this.lastRowOfPage = this.currentPageSize;\n          break;\n        case 'previous':\n          this.firstRowOfPage -= this.currentPageSize;\n          this.lastRowOfPage -= this.currentPageSize;\n          break;\n        case 'next':\n          this.firstRowOfPage += this.currentPageSize;\n          this.lastRowOfPage += this.currentPageSize;\n          break;\n        case 'last':\n          this.firstRowOfPage = this.rows.length - this.currentPageSize + 1;\n          this.lastRowOfPage = this.rows.length;\n          break;\n      }\n\n      const rowsToShow = this.rows.slice(this.firstRowOfPage - 1, this.lastRowOfPage);\n      this.showRows(rowsToShow);\n    }\n  }\n\n  protected override firstUpdated() {\n    super.firstUpdated();\n    this.paginate('first');\n  }\n\n  protected override updated(_changedProperties: PropertyValueMap<any>) {\n    super.updated(_changedProperties);\n\n    for (const row of this.rows) {\n      row.removeEventListener('selected', this.rowCallback);\n      row.addEventListener('selected', this.rowCallback);\n      row.setAttribute('density', this.density);\n    }\n\n    for (const column of this.columns) {\n      column.removeEventListener('filter', this.filterColumnCallback);\n      column.addEventListener('filter', this.filterColumnCallback);\n      column.removeEventListener('sort', this.sortColumnCallback);\n      column.addEventListener('sort', this.sortColumnCallback);\n      column.setAttribute('density', this.density);\n    }\n\n    this.headerCheckboxRow?.removeEventListener('checked', this.headerRowCallback);\n    this.headerCheckboxRow?.addEventListener('checked', this.headerRowCallback);\n\n    this.paginate();\n\n    if (this.inProgress) {\n      this.mdcFoundation?.showProgress();\n    } else {\n      this.mdcFoundation?.hideProgress();\n    }\n\n    this.mdcFoundation?.layout();\n  }\n\n  protected createAdapter(): MDCDataTableAdapter {\n    type ClassName = typeof cssClasses[keyof typeof cssClasses];\n    return {\n      addClass: (className: ClassName) => {\n        if (className === cssClasses.IN_PROGRESS) {\n          this.tableElement.classList.add(cssClasses.IN_PROGRESS);\n        }\n      },\n      removeClass: (className: ClassName) => {\n        if (className === cssClasses.IN_PROGRESS) {\n          this.tableElement.classList.remove(cssClasses.IN_PROGRESS);\n        }\n      },\n      addClassAtRowIndex: (rowIndex: number, className: ClassName) => {\n        if (className === cssClasses.ROW_SELECTED) {\n          this.rows[rowIndex].selected = true;\n        }\n      },\n      getRowCount: () => this.rows.length,\n      getRowElements: () => this.rows,\n      getRowIdAtIndex: (rowIndex: number) => this.rows?.[rowIndex].id ?? null,\n      getRowIndexByChildElement: (el: Element) => this.rows.findIndex((row) => row.contains(el)),\n      getSelectedRowCount: () => this.rows.filter((row) => row.selected).length,\n      isCheckboxAtRowIndexChecked: (rowIndex: number) => this.rows[rowIndex].selected,\n      isHeaderRowCheckboxChecked: () => this.headerCheckbox?.checked ?? false,\n      isRowsSelectable: () => this.headerCheckbox !== undefined ||\n        this.rows.filter((row) => row.checkboxCell !== undefined).length > 0,\n      notifyRowSelectionChanged: (data: MDCDataTableRowSelectionChangedEventDetail) => {\n        /**\n         * Event emitted when row checkbox is checked or unchecked.\n         *\n         * Event detail: `RowSelectionChangedDetail`.\n         */\n        this.dispatchEvent(new CustomEvent<RowSelectionChangedDetail>(\n          'rowSelectionChanged',\n          {\n            detail: {\n              row: this.rows[data.rowIndex],\n              rowIndex: data.rowIndex,\n              selected: data.selected,\n            }\n          }\n        ));\n      },\n      notifySelectedAll: () => {\n        /**\n         * Event emitted when header row checkbox is checked.\n         */\n        this.dispatchEvent(new CustomEvent('selectedAll'));\n      },\n      notifyUnselectedAll: () => {\n        /**\n         * Event emitted when header row checkbox is unchecked.\n         */\n        this.dispatchEvent(new CustomEvent('unselectedAll'));\n      },\n      notifyRowClick: (detail: RowClickEventData) => {\n        /**\n         * Event emitted when a row has been checked or unchecked.\n         *\n         * Event detail: `RowClickEventData`.\n         */\n        this.dispatchEvent(new CustomEvent('rowClick', {detail}));\n      },\n      registerHeaderRowCheckbox: () => {\n      },\n      registerRowCheckboxes: () => {\n      },\n      removeClassAtRowIndex: (rowIndex: number, className: ClassName) => {\n        if (className === cssClasses.ROW_SELECTED) {\n          this.rows[rowIndex].selected = false;\n        }\n      },\n      setAttributeAtRowIndex: (rowIndex: number, attr: string, value: string) => {\n        const row = this.rows[rowIndex];\n        if (row) {\n          row.setAttribute(attr, value);\n          if (attr === attributes.ARIA_SELECTED) {\n            row.selected = value === 'true';\n          }\n        }\n      },\n      setHeaderRowCheckboxChecked: (checked: boolean) => {\n        if (this.headerCheckbox) {\n          this.headerCheckbox.checked = checked;\n        }\n      },\n      setHeaderRowCheckboxIndeterminate: (indeterminate: boolean) => {\n        if (this.headerCheckbox) {\n          this.headerCheckbox.indeterminate = indeterminate;\n        }\n      },\n      setRowCheckboxCheckedAtIndex: (rowIndex: number, checked: boolean) => {\n        const row = this.rows[rowIndex];\n        if (row) {\n          row.selected = checked;\n        }\n      },\n      getHeaderCellCount: () => this.columns.length,\n      getHeaderCellElements: () => this.columns,\n      getAttributeByHeaderCellIndex: (columnIndex: number, attribute: string) => this.columns[columnIndex].getAttribute(attribute),\n      setAttributeByHeaderCellIndex: (columnIndex: number, attribute: string, value: string) => {\n        this.columns[columnIndex].setAttribute(attribute, value);\n      },\n      setClassNameByHeaderCellIndex: (columnIndex: number, className: string) => {\n        const attributesMapping = {\n          [cssClasses.HEADER_CELL_SORTED]: 'sorted',\n          [cssClasses.HEADER_CELL_SORTED_DESCENDING]: 'sortedDescending'\n        };\n        this.columns[columnIndex].toggleAttribute(attributesMapping[className], true);\n      },\n      removeClassNameByHeaderCellIndex: (columnIndex: number, className: string) => {\n        const attributesMapping = {\n          [cssClasses.HEADER_CELL_SORTED]: 'sorted',\n          [cssClasses.HEADER_CELL_SORTED_DESCENDING]: 'sortedDescending'\n        };\n        this.columns[columnIndex].toggleAttribute(attributesMapping[className], false);\n      },\n      notifySortAction: (data: SortActionEventDetail) => {\n        /**\n         * Event emitted when a column has been sorted.\n         *\n         * Event detail: `SortActionEventDetail`.\n         */\n        this.dispatchEvent(new CustomEvent('sorted', {detail: data}));\n      },\n      getTableContainerHeight: () => this.tableContainerElement.getBoundingClientRect().height,\n      getTableHeaderHeight: () => this.headerRowElement.getBoundingClientRect().height,\n      setProgressIndicatorStyles: (styles: ProgressIndicatorStyles) => {\n        this.progressIndicator.style.top = styles.top;\n        this.progressIndicator.style.height = styles.height;\n      },\n      setSortStatusLabelByHeaderCellIndex: (columnIndex: number, sortValue: SortValue) => {\n        const column = this.columns[columnIndex];\n        if (column.sortable) {\n          const mappings = {\n            [SortValue.ASCENDING]: messages.SORTED_IN_ASCENDING,\n            [SortValue.DESCENDING]: messages.SORTED_IN_DESCENDING,\n          };\n          // @ts-ignore\n          column.sortButton.ariaLabel = mappings[sortValue];\n        }\n      }\n    };\n  }\n\n  protected renderTemplate(template: string, params: Object) {\n    for (const [key, value] of Object.entries(params)) {\n      template = template.replace(`:${key}`, value);\n    }\n\n    return template;\n  }\n\n  protected hideRows(rows: DataTableRow[] = this.rows) {\n    for (const row of rows) {\n      row.hidden = true;\n      row.classList.remove('without-bottom-border');\n    }\n  }\n\n  protected showRows(rows: DataTableRow[] = this.rows) {\n    for (const row of rows) {\n      row.hidden = false;\n    }\n\n    // Add bottom border to the last row\n    rows.slice(-1)[0]?.classList.add('without-bottom-border');\n  }\n}\n"]}